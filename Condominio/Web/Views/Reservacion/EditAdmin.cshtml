@model Infrastructure.Models.Reservaciones

@{
    ViewBag.Title = "EditAdmin";
}


@using (Html.BeginForm("SaveAdmin", "Reservacion", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <br />

    <div class="container">
        <div class="row">
            <div class="col-md-6 offset-md-3">
                <div class="card text-center">
                    <div class="card-header">
                        <h2>Editar Reservacion</h2>
                    </div>
                    <div class="card-body">
                        <div class="form-horizontal">

                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            @Html.HiddenFor(model => model.ID)
                            @Html.HiddenFor(model => model.IDUsuario)
                            @Html.HiddenFor(model => model.AreaComunal.ID)
                            @Html.HiddenFor(model => model.IDAreaComunal)


                            @Html.LabelFor(model => model.IDUsuario, htmlAttributes: new { @class = "control-label col-md-2 mx-auto", @readonly = "readonly" })
                            <div class="col-md-10 mx-auto">
                                @Html.DisplayFor(model => model.IDUsuario, new { htmlAttributes = new { @class = "form-control mx-auto" } })
                                @Html.HiddenFor(model => model.IDUsuario, new { htmlAttributes = new { @class = "form-control mx-auto" } })
                                @Html.ValidationMessageFor(model => model.IDUsuario, "", new { @class = "text-danger" })
                            </div>

                            <hr />
                            @Html.LabelFor(model => model.AreaComunal.Descripcion, htmlAttributes: new { @class = "control-label col-md-2 mx-auto", @readonly = "readonly" })
                            <div class="col-md-10 mx-auto">
                                @Html.DisplayFor(model => model.AreaComunal.Descripcion, new { htmlAttributes = new { @class = "form-control mx-auto" } })
                                @Html.HiddenFor(model => model.AreaComunal.Descripcion, new { htmlAttributes = new { @class = "form-control mx-auto" } })
                                @Html.ValidationMessageFor(model => model.AreaComunal.Descripcion, "", new { @class = "text-danger" })
                            </div>
                            <hr />
                            @Html.LabelFor(model => model.Fecha, htmlAttributes: new { @class = "control-label col-md-2 mx-auto", @readonly = "readonly" })
                            <div class="col-md-10 mx-auto">
                                @Html.DisplayFor(model => model.Fecha, new { htmlAttributes = new { @class = "form-control mx-auto" } })
                                @Html.HiddenFor(model => model.Fecha, new { htmlAttributes = new { @class = "form-control mx-auto" } })
                                @Html.ValidationMessageFor(model => model.Fecha, "", new { @class = "text-danger" })
                            </div>
                            <hr />
                            @if (Model.IDEstadoReservaciones != 1)
                            {
                                @Html.LabelFor(model => model.EstadoReservaciones.Descripcion, htmlAttributes: new { @class = "control-label col-md-2 mx-auto", @readonly = "readonly" })
                                <div class="col-md-10 mx-auto">
                                    @Html.DisplayFor(model => model.EstadoReservaciones.Descripcion, new { htmlAttributes = new { @class = "form-control mx-auto" } })
                                    @Html.HiddenFor(model => model.EstadoReservaciones.Descripcion, new { htmlAttributes = new { @class = "form-control mx-auto" } })
                                    @Html.ValidationMessageFor(model => model.EstadoReservaciones.Descripcion, "", new { @class = "text-danger" })
                                </div>
                            }
                            else
                            {
                                <div class="form-group">
                                    @Html.LabelFor(model => model.IDEstadoReservaciones, "IDEstadoReservaciones", htmlAttributes: new { @class = "control-label col-md-2 mx-auto" })
                                    <div class="col-md-10 mx-auto">
                                        @Html.DropDownList("IDEstadoReservaciones", null, htmlAttributes: new { @class = "form-control mx-auto" })
                                        @Html.ValidationMessageFor(model => model.IDEstadoReservaciones, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <hr />
                                <br />
                                <div class="form-group">
                                    <div class="col-md-offset-2 col-md-10 mx-auto">
                                        <input type="submit" value="Save" class="btn btn-success" />
                                    </div>
                                </div>
                            }
                        </div>
                        <br />
                        <div class="card-footer text-center">
                            @Html.ActionLink("Back to List", "IndexAdmin", null, new { @class = "btn btn-primary" })
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}