@model Infrastructure.Models.EstadoCuenta


@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm("SaveAdmin", "EstadoCuenta", FormMethod.Post, new { enctype = "multipart/form-data" }))

{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>EstadoCuenta</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.ID)

    @Html.LabelFor(model => model.IDUsuario, htmlAttributes: new { @class = "control-label col-md-2", @readonly = "readonly" })
    <div class="col-md-10">
        @Html.DisplayFor(model => model.IDUsuario, new { htmlAttributes = new { @class = "form-control" } })
        @Html.HiddenFor(model => model.IDUsuario, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.IDUsuario, "", new { @class = "text-danger" })
    </div>

    @Html.LabelFor(model => model.IDResidencia, htmlAttributes: new { @class = "control-label col-md-2", @readonly = "readonly" })
    <div class="col-md-10">
        @Html.DisplayFor(model => model.IDResidencia, new { htmlAttributes = new { @class = "form-control" } })
        @Html.HiddenFor(model => model.IDResidencia, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.IDResidencia, "", new { @class = "text-danger" })
    </div>

    @if (Model.IDPlanCobro != 0)
    {
        <div class="form-group">
            @Html.LabelFor(model => model.IDPlanCobro, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.IDPlanCobro, new { htmlAttributes = new { @class = "form-control" } })
                @Html.HiddenFor(model => model.IDPlanCobro, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IDPlanCobro, "", new { @class = "text-danger" })
            </div>
        </div>
    }
    else
    {
        <div class="form-group">
            @Html.LabelFor(model => model.IDPlanCobro, "IDPlanCobro", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("IDPlanCobro", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.IDPlanCobro, "", new { @class = "text-danger" })
            </div>
        </div>
    }


    @if (Model.Mes != null)
    {
        <div class="form-group">
            @Html.LabelFor(model => model.Mes, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.Mes, new { htmlAttributes = new { @class = "form-control" } })
                @Html.HiddenFor(model => model.Mes, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Mes, "", new { @class = "text-danger" })
            </div>
        </div>
    }
    else
    {
        <div class="form-group">
            @Html.LabelFor(model => model.Mes, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="date" @Html.EditorFor(model => model.Mes, new { htmlAttributes = new { @class = "form-control" } })
                       @Html.ValidationMessageFor(model => model.Mes, "", new { @class = "text-danger" })
            </div>
        </div>
    }

    @if (Model.IDEstado != 1)
    {
        <div class="col">
            <div class="form-group">
                @Html.LabelFor(model => model.IDEstado, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DisplayFor(model => model.IDEstado, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.HiddenFor(model => model.IDEstado, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.IDEstado, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    }
    else
    {
        <div class="form-group">
            @Html.LabelFor(model => model.IDEstado, "IDEstadoReservaciones", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("IDEstadoReservaciones", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.IDEstado, "", new { @class = "text-danger" })
            </div>
        </div>
    }

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
